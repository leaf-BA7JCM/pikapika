name: Release

on:
  workflow_dispatch:

env:
  go_version: '1.16'
  flutter_channel: 'stable'
  flutter_version: '2.10.3'
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:

  ci-pass:
    name: CI is green
    runs-on: ubuntu-latest
    needs:
      - check_release
      - build_release_assets
    steps:
      - run: exit 0

  check_release:
    name: Check release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: 'master'
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go_version }}
      - name: Check release
        run: |
          cd ci
          go run ./cmd/check_release

  build_release_assets:
    name: Build release assets
    needs:
      - check_release
    strategy:
      fail-fast: false
      matrix:
        config:
          - target: linux
            host: ubuntu-latest
          - target: windows
            host: windows-latest
          - target: macos
            host: macos-latest
          - target: ios
            host: macos-latest
          - target: android-arm32
            host: ubuntu-latest
          - target: android-arm64
            host: ubuntu-latest
          - target: android-x86_64
            host: ubuntu-latest

    runs-on: ${{ matrix.config.host }}

    env:
      TARGET: ${{ matrix.config.target }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go_version }}

      - id: check_asset
        name: Check asset
        run: |
          cd ci
          go run ./cmd/check_asset

      - name: Setup flutter
        if: steps.check_asset.outputs.skip_build != 'true'
        uses: subosito/flutter-action@v2.3.0
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}

      - name: Setup java (Android)
        if: steps.check_asset.outputs.skip_build != 'true' && ( matrix.config.target == 'android-arm32' || matrix.config.target == 'android-arm64' || matrix.config.target == 'android-x86_64' )
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'zulu'

      - name: Setup android tools (Android)
        if: steps.check_asset.outputs.skip_build != 'true' && ( matrix.config.target == 'android-arm32' || matrix.config.target == 'android-arm64' || matrix.config.target == 'android-x86_64' )
        uses: maxim-lobanov/setup-android-tools@v1
        with:
          packages: |
            platform-tools
            platforms;android-32
            build-tools;30.0.2
            ndk;22.1.7171670

      - name: Setup msys2 (Windows)
        if: steps.check_asset.outputs.skip_build != 'true' && matrix.config.target == 'windows'
        uses: msys2/setup-msys2@v2
        with:
          install: gcc make zip

      - name: Install appimage (Linux)
        if: steps.check_asset.outputs.skip_build != 'true' && matrix.config.target == 'linux'
        run: |
          curl -JOL https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod a+x appimagetool-x86_64.AppImage
          mv appimagetool-x86_64.AppImage /usr/bin/appimagetool

